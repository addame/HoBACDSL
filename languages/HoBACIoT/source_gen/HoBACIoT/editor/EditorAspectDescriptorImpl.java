package HoBACIoT.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ActionType_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Aspirateur_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new AuthorizationType_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Bluetooth_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Chambre_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Cuisine_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Devices_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new EntityType_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new EnvironmentType_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Family_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Four_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new Frigo_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new GrandMaman_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new GrandPapa_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new GrandParents_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new House_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new Maman_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new MicrOnde_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new Miror_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new ObjectType_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new Papa_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new Person_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new Piece_Editor());
      case 23:
        return Collections.<ConceptEditor>singletonList(new Prise_Editor());
      case 24:
        return Collections.<ConceptEditor>singletonList(new Robinet_Editor());
      case 25:
        return Collections.<ConceptEditor>singletonList(new SalleReunion_Editor());
      case 26:
        return Collections.<ConceptEditor>singletonList(new Salon_Editor());
      case 27:
        return Collections.<ConceptEditor>singletonList(new Store_Editor());
      case 28:
        return Collections.<ConceptEditor>singletonList(new SubjectType_Editor());
      case 29:
        return Collections.<ConceptEditor>singletonList(new TV_Editor());
      case 30:
        return Collections.<ConceptEditor>singletonList(new Thermostat_Editor());
      case 31:
        return Collections.<ConceptEditor>singletonList(new ToothBrush_Editor());
      case 32:
        return Collections.<ConceptEditor>singletonList(new Usager_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new Action_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new AttributeDesignator_SubstituteMenu());
      case 2:
        return Collections.<SubstituteMenu>singletonList(new Autorization_SubstituteMenu());
      case 3:
        return Collections.<SubstituteMenu>singletonList(new Environment_SubstituteMenu());
      case 4:
        return Collections.<SubstituteMenu>singletonList(new Resource_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276cb6f0L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746932L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x6b1342531269bbf5L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374692fL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e7bL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e7fL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x6b134253123a088dL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x6b134253123adc47L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276cfab1L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba37468fcL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746927L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746928L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746910L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374690cL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746900L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e8bL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746909L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746929L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374692cL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276cde66L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746905L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e8cL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e76L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746931L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374692aL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e7dL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x272a6c4fee938e7eL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374692dL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276c95dcL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba3746930L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374692eL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x2dc58a2ba374692bL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x4254bfcda6748209L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276bb406L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276c516aL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x6b134253123ad142L), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276bc97cL), MetaIdFactory.conceptId(0xc51db5c4495f4e00L, 0xb88912a634a9acb3L, 0x36d641ea276baf08L)).seal();
}
